package com.vaibhav.lld.design.SchemaDesign.pen;

import com.vaibhav.lld.design.SchemaDesign.pen.constants.INK;
import com.vaibhav.lld.design.SchemaDesign.pen.constants.RefillType;
import com.vaibhav.lld.design.SchemaDesign.pen.impl.*;
import com.vaibhav.lld.design.SchemaDesign.pen.model.Nib;
import org.junit.Assert;
import org.junit.Test;

public class PenTest {
    @Test
    public void createGelPen(){
        Nib nib=new Nib(2.0);
        Pen gelPen=new GelPen("Parker",100.0,new SmoothWritingBehaviour(), INK.BLACK,nib,true);
        gelPen.write();

        Assert.assertTrue("gEL REFILL IS THERE",RefillType.GELPENREFILL==((GelPen)gelPen).getRefill().getType());

    }
    @Test
    public void createBallPen(){
        Nib nib=new Nib(2.0);
        Pen ballPen=new BallPen("ButterFlow",150.20,new SmoothWritingBehaviour(),nib,INK.PINK,false);
        ballPen.write();
Assert.assertTrue("ball pen refill cannot be changed",((BallPen)ballPen).isRefillable()==false);
        Assert.assertTrue("ball REFILL IS THERE",RefillType.BALLPENREFILL==((BallPen)ballPen).getRefill().getType());

    }
    @Test
    public void createFountainPen(){
        Nib nib=new Nib(12.2);
        Pen fountainPen=new FountainPen("FTP",450.2,new RoughWritingBehaviour(),INK.RED,nib);
        fountainPen.write();
        ((FountainPen)fountainPen).fillInk(INK.RED);
        Assert.assertTrue("fountain pen refill cannot be changed",(INK.RED)==((FountainPen) fountainPen).getInk());

    }

}
